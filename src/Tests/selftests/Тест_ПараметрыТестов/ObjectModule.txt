
Перем юТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	ПараметрыТеста = Новый Структура("ПредставлениеТеста,ИмяТеста,Транзакция,Параметр", "Тест с опциями", "Модуль_ТестСОпциями", Истина, "тест представления");
	ВсеТесты.Добавить(ПараметрыТеста);

	ПараметрыТестов = Новый Структура("ИмяТеста,Транзакция,Параметр", "Модуль_ТестСОпциями", Истина, 1);
	ВсеТесты.Добавить(ПараметрыТестов);
	
	ПараметрыТестов = Новый Структура("ИмяТеста,Транзакция,Параметр", "Модуль_ТестСОпциями", Истина, 2);
	ВсеТесты.Добавить(ПараметрыТестов);
	
	Параметры = Новый Структура("ИмяТеста,Транзакция", "Модуль_ТестСОпциями_БезПараметра", Истина);
	ВсеТесты.Добавить(Параметры);
	
	ПараметрыТеста = Новый Структура("ПредставлениеТеста,ИмяТеста,Транзакция,Параметр", "ТестСОпциями_ ПараметрЗаданКакНеопределено", "Модуль_ТестСОпциями_ПараметрМожетБытьНеЗадан", Истина, Неопределено);
	ВсеТесты.Добавить(ПараметрыТеста);
	
	ПараметрыТеста = Новый Структура("ПредставлениеТеста,ИмяТеста,Транзакция,Параметр", "ТестСОпциями_ ПараметрЗаданКакПустой", "Модуль_ТестСОпциями_ПараметрМожетБытьНеЗадан", Истина);
	ВсеТесты.Добавить(ПараметрыТеста);

	ВсеТесты.Добавить("Модуль_ТестСОпциями_БезПараметра");
	ВсеТесты.Добавить("Модуль_Тест_Обычный");
	
	Возврат ВсеТесты;
	
КонецФункции

Процедура Модуль_ТестСОпциями(Парам) Экспорт

	юТест.ПроверитьЗаполненность(Парам, "ТестСОпциями(Парам)");
	
КонецПроцедуры

Процедура Модуль_ТестСОпциями_ПараметрМожетБытьНеЗадан(Парам) Экспорт	
КонецПроцедуры

Процедура Модуль_ТестСОпциями_БезПараметра() Экспорт

КонецПроцедуры

Процедура Модуль_Тест_Обычный() Экспорт
	
	юТест.Проверить(Истина, "Значение ложно");
	
КонецПроцедуры
