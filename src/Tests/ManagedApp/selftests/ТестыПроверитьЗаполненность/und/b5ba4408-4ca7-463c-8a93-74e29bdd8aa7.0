{2,
{27,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},0,"",""},"&НаКлиенте
Перем Я_Тест;

&НаКлиенте
Функция ПолучитьСписокТестов(юТест) Экспорт
	
	Я_Тест = юТест;
	
	Результат = Я_Тест.Новый_НаборТестов();

	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьЗаполненность"");
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьЗаполненностьПадает"");
	
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьНеЗаполненность"");
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьНеЗаполненностьПадает"");
	
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьЗаполненность_и_НеЗаполненность_Булево"");
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьЗаполненность_и_НеЗаполненность_Массивы"");
	// TODO Другие коллекции значений
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Тест_ПроверитьЗаполненность() Экспорт
	Я_Тест.ПроверитьЗаполненность(1);
	Я_Тест.ПроверитьЗаполненность(-1);
	Я_Тест.ПроверитьЗаполненность(0.00000000000000000000000001);
	Я_Тест.ПроверитьЗаполненность(-0.00000000000000000000000001);
	
	Я_Тест.ПроверитьЗаполненность('00010102');
	Я_Тест.ПроверитьЗаполненность(ТекущаяДата());
	
	Я_Тест.ПроверитьЗаполненность(""а"");
	
    //Если Метаданные.Отчеты.Количество() > 0 Тогда
    //	Я_Тест.ПроверитьЗаполненность(Отчеты[Метаданные.Отчеты[0].Имя].Создать());
    //КонецЕсли; 
    //Если Метаданные.Обработки.Количество() > 0 Тогда
    //	Я_Тест.ПроверитьЗаполненность(Обработки[Метаданные.Обработки[0].Имя].Создать());
    //КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьЗаполненностьПадает() Экспорт
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьЗаполненность(0)"", ""Значение (0) не заполнено, а ожидалась заполненность"");
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьЗаполненность('00010101')"", ""Значение (01.01.0001 0:00:00) не заполнено, а ожидалась заполненность"");
	
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьЗаполненность("""""""")"", ""Значение () не заполнено, а ожидалась заполненность"");
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьЗаполненность("""" """")"", ""Значение ( ) не заполнено, а ожидалась заполненность""); // один пробел
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьЗаполненность(""""  """")"", ""Значение (  ) не заполнено, а ожидалась заполненность""); // два пробела
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьЗаполненность(""""	"""")"", ""Значение (	) не заполнено, а ожидалась заполненность""); // табуляция
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьЗаполненность(NULL, """"NULL"""")"", ""Значение () не заполнено, а ожидалась заполненность""+Символы.ПС+""NULL"");
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьЗаполненность(Неопределено, """"Неопределено"""")"", ""Значение () не заполнено, а ожидалась заполненность""+Символы.ПС+""Неопределено"");
	
    //Если Метаданные.Справочники.Количество() > 0 Тогда
    //	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьЗаполненность(Справочники[Метаданные.Справочники[0].Имя].ПустаяСсылка())"", ""Значение () не заполнено, а ожидалась заполненность"");
    //КонецЕсли; 
    //Если Метаданные.Документы.Количество() > 0 Тогда
    //	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьЗаполненность(Документы[Метаданные.Документы[0].Имя].ПустаяСсылка())"", ""Значение () не заполнено, а ожидалась заполненность"");
    //КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьНеЗаполненность() Экспорт
	Я_Тест.ПроверитьНеЗаполненность(0);
	Я_Тест.ПроверитьНеЗаполненность('00010101');
	
	Я_Тест.ПроверитьНеЗаполненность("""");
	Я_Тест.ПроверитьНеЗаполненность("" "");
	Я_Тест.ПроверитьНеЗаполненность(""  "");
	Я_Тест.ПроверитьНеЗаполненность(""	""); // там табуляция
	Я_Тест.ПроверитьНеЗаполненность(NULL, ""NULL"");
	Я_Тест.ПроверитьНеЗаполненность(Неопределено, ""Неопределено"");
	
    //Если Метаданные.Справочники.Количество() > 0 Тогда
    //	Я_Тест.ПроверитьНеЗаполненность(Справочники[Метаданные.Справочники[0].Имя].ПустаяСсылка());
    //КонецЕсли; 
    //Если Метаданные.Документы.Количество() > 0 Тогда
    //	Я_Тест.ПроверитьНеЗаполненность(Документы[Метаданные.Документы[0].Имя].ПустаяСсылка());
    //КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьНеЗаполненностьПадает() Экспорт
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьНеЗаполненность(1)"", ""Значение (1) заполнено, а ожидалась незаполненность"");
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьНеЗаполненность(-1)"", ""Значение (-1) заполнено, а ожидалась незаполненность"");
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьНеЗаполненность(0.00000000000000000000000001)"", ""Значение (0,00000000000000000000000001) заполнено, а ожидалась незаполненность"");
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьНеЗаполненность(-0.00000000000000000000000001)"", ""Значение (-0,00000000000000000000000001) заполнено, а ожидалась незаполненность"");
	
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьНеЗаполненность('00010102')"", ""Значение (02.01.0001 0:00:00) заполнено, а ожидалась незаполненность"");
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьНеЗаполненность(ТекущаяДата())"", ""Значение (""+ТекущаяДата()+"") заполнено, а ожидалась незаполненность"");
	
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьНеЗаполненность(""""а"""")"", ""Значение (а) заполнено, а ожидалась незаполненность"");
	
    //Если Метаданные.Отчеты.Количество() > 0 Тогда
    //	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьНеЗаполненность(Отчеты[Метаданные.Отчеты[0].Имя].Создать())"", ""Значение (ОтчетОбъект.""+Метаданные.Отчеты[0].Имя+"") заполнено, а ожидалась незаполненность"");
    //КонецЕсли; 
    //Если Метаданные.Обработки.Количество() > 0 Тогда
    //	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьНеЗаполненность(Обработки[Метаданные.Обработки[0].Имя].Создать())"", ""Значение (ОбработкаОбъект.""+Метаданные.Обработки[0].Имя+"") заполнено, а ожидалась незаполненность"");
    //КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьЗаполненность_и_НеЗаполненность_Булево() Экспорт
	Я_Тест.ПроверитьЗаполненность(Истина);
	Я_Тест.ПроверитьЗаполненность(ЛОЖЬ);
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьЗаполненность_и_НеЗаполненность_Массивы() Экспорт
	Массив = Новый Массив(1); 
	Я_Тест.ПроверитьЗаполненность(Массив);
	Я_Тест.ПроверитьЗаполненность(Новый ФиксированныйМассив(Массив));
	
	Массив = Новый Массив(2); 
	Я_Тест.ПроверитьЗаполненность(Массив);
	Я_Тест.ПроверитьЗаполненность(Новый ФиксированныйМассив(Массив));
	
	Я_Тест.ПроверитьНеЗаполненность(Новый Массив);
	Массив = Новый Массив(1); 
	Массив.Очистить();
	Я_Тест.ПроверитьНеЗаполненность(Массив);
	Я_Тест.ПроверитьНеЗаполненность(Новый ФиксированныйМассив(Массив));
КонецПроцедуры
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",ba5460d1-9861-4aa5-b6cb-88d26240fac8}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}