&НаКлиенте
Перем Я_Тест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	Я_Тест = ЮнитТестирование;
	
	Результат = Я_Тест.Новый_НаборТестов();
	
	Я_Тест.НаборТестов_Добавить(Результат, "Тест_ПроверитьИстинуВыполнилось");
	Я_Тест.НаборТестов_Добавить(Результат, "Тест_ПроверитьИстинуПадает");
	
	Я_Тест.НаборТестов_Добавить(Результат, "Тест_ПроверитьЛожьВыполнилось");
	Я_Тест.НаборТестов_Добавить(Результат, "Тест_ПроверитьЛожьПадает");
	
	Я_Тест.НаборТестов_Добавить(Результат, "Тест_ПроверитьЛожьПадаетДопСообщениеОшибки");
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Тест_ПроверитьИстинуВыполнилось() Экспорт
	Я_Тест.Проверить(Истина);
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьИстинуПадает() Экспорт
	Я_Тест.ПроверитьНеВыполнилось("Проверить(Ложь)", "Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.");
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьЛожьВыполнилось() Экспорт
	Я_Тест.ПроверитьЛожь(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьЛожьПадает() Экспорт
	Я_Тест.ПроверитьНеВыполнилось("ПроверитьЛожь(Истина)", "Переданный параметр (истина) не является Ложью, а хотели, чтобы являлся.");
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьЛожьПадаетДопСообщениеОшибки() Экспорт
	Я_Тест.ПроверитьНеВыполнилось("Проверить(Ложь, ""Доп. сообщение ошибки"")", "Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся."+Символы.ПС+"Доп. сообщение ошибки");
КонецПроцедуры
