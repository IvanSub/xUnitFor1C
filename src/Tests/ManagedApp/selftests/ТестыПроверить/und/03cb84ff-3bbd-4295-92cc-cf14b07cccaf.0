{2,
{27,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},0,"",""},"&НаКлиенте
Перем Я_Тест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	Я_Тест = ЮнитТестирование;
	
	Результат = Я_Тест.Новый_НаборТестов();
	
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьИстинуВыполнилось"");
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьИстинуПадает"");
	
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьЛожьВыполнилось"");
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьЛожьПадает"");
	
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьЛожьПадаетДопСообщениеОшибки"");
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Тест_ПроверитьИстинуВыполнилось() Экспорт
	Я_Тест.Проверить(Истина);
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьИстинуПадает() Экспорт
	Я_Тест.ПроверитьНеВыполнилось(""Проверить(Ложь)"", ""Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся."");
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьЛожьВыполнилось() Экспорт
	Я_Тест.ПроверитьЛожь(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьЛожьПадает() Экспорт
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьЛожь(Истина)"", ""Переданный параметр (истина) не является Ложью, а хотели, чтобы являлся."");
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьЛожьПадаетДопСообщениеОшибки() Экспорт
	Я_Тест.ПроверитьНеВыполнилось(""Проверить(Ложь, """"Доп. сообщение ошибки"""")"", ""Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.""+Символы.ПС+""Доп. сообщение ошибки"");
КонецПроцедуры
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",02fc0901-3cd2-4561-986b-96cdb0b4b42a}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}