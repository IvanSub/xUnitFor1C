{2,
{28,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},0,"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"&НаКлиенте
Перем Я_Тест;

&НаКлиенте
Функция ПолучитьСписокТестов(юТест) Экспорт
	
	Я_Тест = юТест;
	
	Результат = Я_Тест.Новый_НаборТестов();
	
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьТип_НаименованиеТипа"");
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьТип_СамТип"");
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьТип_Ошибки"");
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Тест_ПроверитьТип_НаименованиеТипа() Экспорт
	
	Я_Тест.ПроверитьТип(ТипЗнч(1), ""Тип"");
	
	Я_Тест.ПроверитьТип(1, ""Число"");
	Я_Тест.ПроверитьТип(0, ""Число"");
	
	Я_Тест.ПроверитьТип("""", ""Строка"");
	Я_Тест.ПроверитьТип(""12"", ""Строка"");
	
	Я_Тест.ПроверитьТип(Ложь, ""Булево"");
	Я_Тест.ПроверитьТип(Истина, ""Булево"");
	
	Я_Тест.ПроверитьТип('00010101', ""Дата"");
	Я_Тест.ПроверитьТип(ТекущаяДата(), ""Дата"");
	
    //Если Метаданные.Справочники.Количество() > 0 Тогда
    //	имяМетаданного = Метаданные.Справочники[0].Имя;
    //	Я_Тест.ПроверитьТип(Справочники[имяМетаданного].ПустаяСсылка(), ""СправочникСсылка.""+имяМетаданного);
    //КонецЕсли; 
    //Если Метаданные.Документы.Количество() > 0 Тогда
    //	имяМетаданного = Метаданные.Документы[0].Имя;
    //	Я_Тест.ПроверитьТип(Документы[имяМетаданного].ПустаяСсылка(), ""ДокументСсылка.""+имяМетаданного);
    //КонецЕсли; 
    //Если Метаданные.Отчеты.Количество() > 0 Тогда
    //	имяМетаданного = Метаданные.Отчеты[0].Имя;
    //	Я_Тест.ПроверитьТип(Отчеты[имяМетаданного].Создать(), ""ОтчетОбъект.""+имяМетаданного);
    //КонецЕсли; 
    //Если Метаданные.Обработки.Количество() > 0 Тогда
    //	имяМетаданного = Метаданные.Обработки[0].Имя;
    //	Я_Тест.ПроверитьТип(Обработки[имяМетаданного].Создать(), ""ОбработкаОбъект.""+имяМетаданного);
    //КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьТип_СамТип() Экспорт
	Я_Тест.ПроверитьТип(1, Тип(""Число""));
	Я_Тест.ПроверитьТип(0, Тип(""Число""));
	
	Я_Тест.ПроверитьТип("""", Тип(""Строка""));
	Я_Тест.ПроверитьТип(""12"", Тип(""Строка""));
	
	Я_Тест.ПроверитьТип(ЛОЖЬ, Тип(""Булево""));
	Я_Тест.ПроверитьТип(Истина, Тип(""Булево""));
	
	Я_Тест.ПроверитьТип('00010101', Тип(""Дата""));
	Я_Тест.ПроверитьТип(ТекущаяДата(), Тип(""Дата""));
	
    //Если Метаданные.Справочники.Количество() > 0 Тогда
    //	имяМетаданного = Метаданные.Справочники[0].Имя;
    //	Я_Тест.ПроверитьТип(Справочники[имяМетаданного].ПустаяСсылка(), Тип(""СправочникСсылка.""+имяМетаданного));
    //КонецЕсли; 
    //Если Метаданные.Документы.Количество() > 0 Тогда
    //	имяМетаданного = Метаданные.Документы[0].Имя;
    //	Я_Тест.ПроверитьТип(Документы[имяМетаданного].ПустаяСсылка(), Тип(""ДокументСсылка.""+имяМетаданного));
    //КонецЕсли; 
    //Если Метаданные.Отчеты.Количество() > 0 Тогда
    //	имяМетаданного = Метаданные.Отчеты[0].Имя;
    //	Я_Тест.ПроверитьТип(Отчеты[имяМетаданного].Создать(), Тип(""ОтчетОбъект.""+имяМетаданного));
    //КонецЕсли; 
    //Если Метаданные.Обработки.Количество() > 0 Тогда
    //	имяМетаданного = Метаданные.Обработки[0].Имя;
    //	Я_Тест.ПроверитьТип(Обработки[имяМетаданного].Создать(), Тип(""ОбработкаОбъект.""+имяМетаданного));
    //КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьТип_Ошибки() Экспорт
	//Я_Тест.ПроверитьТип(1, Истина);
	//Я_Тест.ПроверитьТип(1, ""Строка"");
	
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьТип(1, Истина)"", ""ПроверитьТип: Тип значения параметра ТипИлиИмяТипа должен быть <Тип> или <Строка>, а получили <Булево>"");
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьТип(1, """"Строка"""")"", ""Типом значения <1> является <Число>, а ожидался тип <Строка>."");
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьТип(1, ТипЗнч(""""Строка""""))"", ""Типом значения <1> является <Число>, а ожидался тип <Строка>."");
КонецПроцедуры
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",be3b4dc4-f783-49aa-b38f-f92991f424a5}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}