Функция Объект()
	Возврат ЭтотОбъект;
КонецФункции

Процедура КоманднаяПанель1СоздатьМакетДанных(Кнопка)
	НовыйМакет = СоздатьМакетДанныхСервер();
КонецПроцедуры

Функция СоздатьМакетДанныхСервер()
	Макет = ЭлементыФормы.Макет;
	Макет.Очистить();
	ОсновнойОбъект = Объект();
	массивДанных = Новый Массив;
	Для каждого строка Из ТаблицаДанных Цикл
		ОписательЭлемента = ОсновнойОбъект.СоздатьОписательЭлемента();
		ЗаполнитьЗначенияСвойств(ОписательЭлемента, строка);
		массивДанных.Добавить(ОписательЭлемента);
	КонецЦикла;
	НовыйМакет = ОсновнойОбъект.СоздатьМакетДляГенерацииДанных(массивДанных);
	Если ТипЗнч(НовыйМакет) = Тип("ТабличныйДокумент") Тогда
		Макет.Вывести(НовыйМакет);
	КонецЕсли;
	Возврат НовыйМакет;
КонецФункции

Процедура КоманднаяПанель1СохранитьМакетДанныхВФайл(Кнопка)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.ПолноеИмяФайла = "";
	ДиалогВыбораФайла.Фильтр = "Табличный документ (*.mxl)|*.mxl|Все файлы (*.*)|*.*";
	ДиалогВыбораФайла.Заголовок = "Выберите файл";
	Если Не ДиалогВыбораФайла.Выбрать() Тогда
		Возврат;		
	КонецЕсли;

	Макет = ЭлементыФормы.Макет;
	Макет.Записать(ДиалогВыбораФайла.ПолноеИмяФайла);
КонецПроцедуры

Процедура КоманднаяПанель1ПротестироватьЗагрузкуМакета(Кнопка)
	путьФайл_юТест = ПолучитьПутьОбработкиЗапускателяТестов_Сервер();
	
	//ИдОбработки_юТест = Новый УникальныйИдентификатор();
	//ПодключитьНаСервереВнешнююОбработкуОтКлиента(путьФайл_юТест, ИдОбработки_юТест);
	ИдОбработки_юТест = путьФайл_юТест;
	
	Макет = ЭлементыФормы.Макет;
	ПроверитьЗагрузкуМакетаСервер(ИдОбработки_юТест, Макет);
КонецПроцедуры

Процедура ПроверитьЗагрузкуМакетаСервер(ИдОбработки_юТест, ТабличныйДокумент)
	НачатьТранзакцию();
	
	юТест = ВнешниеОбработки.Создать(ИдОбработки_юТест);
	
	ТестовыеДанные = юТест.СоздатьДанныеПоТабличномуДокументу(ТабличныйДокумент);
		юТест.ПроверитьНеРавенство(0, ТестовыеДанные.Количество(), "не заполнены тестовые данные. Возможно, макет данных пуст!" );
		
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	Сообщить("Проверка загрузки объектов в ИБ из макета данных выполнена успешно.");	
КонецПроцедуры

Функция ПолучитьПутьОбработкиЗапускателяТестов_Сервер()
	каталогТекущегоФайла = ПолучитьКаталогОбработкиСервер();
	
	имяФайла_Раннера = "UnitTestRunner.epf";
	Файл = Новый Файл(каталогТекущегоФайла + имяФайла_Раннера);
	Если НЕ Файл.Существует() Тогда
		Файл = Новый Файл(каталогТекущегоФайла + "..\" + имяФайла_Раннера);
		Если НЕ Файл.Существует() Тогда
			ВызватьИсключение "Не удалось найти файл "+имяФайла_Раннера;
		КонецЕсли;
	КонецЕсли;
	путьФайл_Раннер = Файл.ПолноеИмя;
	Возврат путьФайл_Раннер;
КонецФункции

&НаСервере
Функция ПолучитьКаталогОбработкиСервер()
	ОсновнойОбъект = Объект();
	МассивСтрок = ОсновнойОбъект.ПолучитьМассивИзСтрокиСРазделителем_ирЛкс(ОсновнойОбъект.ИспользуемоеИмяФайла, "\");
	МассивСтрок.Удалить(МассивСтрок.ВГраница());
	Каталог = "";
	Для каждого Строка Из МассивСтрок Цикл
		Каталог = Каталог + Строка + "\";
	КонецЦикла;
	Возврат Каталог;
КонецФункции

Процедура ТаблицаДанныхСсылкаПриИзменении(Элемент)
	//ТаблицаДанныхСсылкаПриИзмененииСервер(Элементы.ТаблицаДанных.ТекущиеДанные.ПолучитьИдентификатор());
	ТаблицаДанныхСсылкаПриИзмененииСервер(ЭлементыФормы.ТаблицаДанных.ТекущаяСтрока);
КонецПроцедуры

Процедура ТаблицаДанныхСсылкаПриИзмененииСервер(ИдентификаторСтрокиДанных)
	//ЭлементДанных = ТаблицаДанных.НайтиПоИдентификатору(ИдентификаторСтрокиДанных);
	ЭлементДанных = ИдентификаторСтрокиДанных;
	Если ЗначениеЗаполнено(ЭлементДанных.Ссылка) Тогда
		ОсновнойОбъект = Объект();
		Ид = ОсновнойОбъект.ПолучитьИдентификаторПредставленияПоСсылке(ЭлементДанных.Ссылка);
		ЭлементДанных.ИмяПеременной = Ид;
		ЭлементДанных.Метаданное = ЭлементДанных.Ссылка.Метаданные().ПолноеИмя();
		ЭлементДанных.РежимПоиска = "Перем";
	КонецЕсли;
КонецПроцедуры
