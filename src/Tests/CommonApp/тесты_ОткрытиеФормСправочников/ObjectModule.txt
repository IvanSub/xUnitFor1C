Перем _Форма;

Перем	юТест;

// основная процедура для юнит-тестирования SnowTest
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ДобавитьТестДляМетаданного(ВсеТесты, Метаданные.Справочники, "Тест_ОткрытьФормуСуществующегоЭлементаСправочника", ПолучитьСписокИсключений_Существующие());
	
	ДобавитьТестДляМетаданного(ВсеТесты, Метаданные.Справочники, "Тест_ОткрытьФормуНовогоЭлементаСправочника", ПолучитьСписокИсключений_Новые());
	
	Возврат ВсеТесты;
КонецФункции

Процедура ПослеЗапускаТеста() Экспорт
		//Если НЕ ЗначениеЗаполнено(_Форма) Тогда
		//	Возврат;
		//КонецЕсли; 
	Если ТипЗнч(_Форма) <> Тип("Форма") Тогда
		Возврат;
	КонецЕсли; 
	_Форма.Модифицированность = Ложь;
	Если _Форма.Открыта() Тогда
		_Форма.Закрыть();
	КонецЕсли; 
КонецПроцедуры

Процедура ДобавитьТестДляМетаданного(ВсеТесты, менеджерМетаданного, имяТеста, списокИсключений)
	Для Каждого мДокумент Из менеджерМетаданного Цикл
		Если списокИсключений.НайтиПоЗначению(мДокумент.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если (ПравоДоступа("Просмотр", мДокумент) или ПравоДоступа("ИнтерактивноеДобавление", мДокумент)) 
			и ПравоДоступа("Добавление", мДокумент) 
			//И мДокумент.ОсновнаяФормаОбъекта <> Неопределено 
			Тогда
				лПараметры = Новый Структура("ИмяТеста,Транзакция,Параметр", имяТеста, Истина, мДокумент.Имя);
				ВсеТесты.Добавить(лПараметры);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Тест_ОткрытьФормуСуществующегоЭлементаСправочника(_ИДСправочника) Экспорт
	Сообщить("_ИДСправочника = <"+?(_ИДСправочника = Неопределено, "Неопределено", _ИДСправочника)+">"); 
	_элем = Справочники[_ИДСправочника].СоздатьЭлемент();
	_элем.УстановитьНовыйКод();
	_элем.ОбменДанными.Загрузка = Истина;
	_элем.Записать();
	_Форма = _элем.ПолучитьФорму();
	
	_Форма.Открыть();
		юТест.Проверить(_Форма.Открыта(), "_Форма существующего элемента справочника """+_ИДСправочника+""" не открылась, а должна была открыться");
	_Форма.Обновить();
КонецПроцедуры

Процедура Тест_ОткрытьФормуНовогоЭлементаСправочника(_ИДСправочника) Экспорт
	Сообщить("_ИДСправочника = <"+?(_ИДСправочника = Неопределено, "Неопределено", _ИДСправочника)+">"); 
	_элем = Справочники[_ИДСправочника].СоздатьЭлемент();
	Если НЕ ПравоДоступа("ИнтерактивноеДобавление", _элем.Метаданные()) Тогда
		Возврат;
	КонецЕсли;
	_Форма = _элем.ПолучитьФорму();
	_Форма.Открыть();
		юТест.Проверить(_Форма.Открыта(), "_Форма нового элемента справочника """+_ИДСправочника+""" не открылась, а должна была открыться");
	_Форма.Обновить();
КонецПроцедуры

Функция ПолучитьСписокИсключений_Существующие()
	Результат = Новый СписокЗначений;
	
	Результат.Добавить("ирАлгоритмы");
	
	Возврат Результат;
КонецФункции

Функция ПолучитьСписокИсключений_Новые()
	Результат = Новый СписокЗначений;
	
	//Результат.Добавить("ирАлгоритмы");
	
	Возврат Результат;
КонецФункции
